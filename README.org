#+TITLE: My NixOS Configuration

* Overview
My NixOS configuration flake so far.

* Highlights
| Window Manager  | i3              |
| Bar             | i3status        |
| Editor          | Emacs           |
| Terminal        | xterm           |
| Browser         | Firefox         |
| Notify server   | dunst           |
| Monitor manager | arandr          |
| Screenshot      | scrot/flameshot |
| Bluetooth       | blueman         |

* Literate Configuration
There's an attempt to turn my entire configuration into a literate one.
** Rationale
- Write documentation, not comments.
- Split the configuration into sensible modules.
** Pros
- ~org-mode~ navigation of one configuration file.
- Configure the ~extraCongif~ argument in the correct language.
- Break-down any configuration.
- Enable disabling of code with comments or removing them.
** Cons
- Requires knowledge of ~org-mode~.
- Requires an initial time investment to setup.
- Mistakes could be made in the ~:tangle~ header argument.
** Steps
- [X] Move everything in ~./modules~ to ~modules.org~.
- [X] Move ~modules.org~ to ~nixos.org~.
- [X] Move ~configuration.nix~ to ~nixos.org~.
- [X] Move ~flake.nix~ to ~nixos.org~.
- [X] Move ~home.nix~ to ~nixos.org~.
- [ ] Test out styles.
** Styles
I have so far found two styles to write the configuration, we can count two more
variations if we include the property of ~:header-args~

*** Without noweb and without ~:header-args~

This is the most basic form where you include the path to the file in every
code block.

~extraConfig~ is broken into three blocks. First for the start, second for the
configuration and the last to close the quotes.
*** With noweb and without ~:header-args~

This is also basic as you include the path to the file in every code block
*except* those where the configuration for ~extraConfig~ is written.

~extraConfig~ is broken into two blocks. One for everything except the
~extraConfig~ argument and one for the ~extraConfig~ argument. This one is
preferred to the first as you do not have to keep track of opening and
closing everything.

This style also requires naming the blocks for the ~extraConfig~. Potential
names are ~program_config~ and ~program_extraConfig~.
This is the same
*** With noweb and with ~:header-args~

This form enables omitting the path to file argument as it is included once
in the PROPERTY drawer of the org subtree.

The drawback is that every ~extraConfig~ block has to have a ~:tangle no~
argument to avoid duplication and a broken configuration.
*** With noweb and without ~:header-args~
Not used yet. The strucutre could be as follows:

1. One main block into which everything is included.
2. Any number of named code blocks with their documentation and any other
   comments.


This would avoid any need to include ~:tangle no~ as you simply do not include the
code block. I also noticed that this fixes code indentation problems.
* TODO Usage
** NixOS as a Desktop
** Development in Nix Flakes
** Development in Distrobox

* Future Concerns
Concerns for topics that are more than one year away. These do not affect the
current configuration.
** VFIO
In the future I want to build a PC with the goal of VFIO passthrough, I have
found a few guides but have not tested any myself.

If I can't make it work I'll just dual boot with Windows.
*** Resources
- [[https://nixos.wiki/wiki/PCI_passthrough][PCI passthrough - NixOS Wiki]]
- [[https://gist.github.com/CRTified/43b7ce84cd238673f7f24652c85980b3][VFIO Passthrough on NixOS Â· GitHub (2019-2021)]]
- [[https://forum.level1techs.com/t/nixos-vfio-pcie-passthrough/130916][NixOS VFIO PCIe Passthrough - Wikis & How-to Guides - Level1Techs Forums (2018-2022)]]
- [[https://astrid.tech/2022/09/22/0/nixos-gpu-vfio/][A GPU Passthrough Setup  for NixOS (with VR passthrough too!) | astrid.tech (2022-09-22)]]
*** Last Resort
- [ ] Can this be done with ~virt-manager~ installed inside an Arch Linux ~distrobox~?
